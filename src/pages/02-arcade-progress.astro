---

---

<!doctype html>
<html lang="en">
  <head>
    <script type="module" src="https://unpkg.com/rough-notation?module"
    ></script>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Arcade Ticket Progress</title>
  </head>
  <body>
    <h1 id="title">Database</h1>
    <h1 id="count">02</h1>
    <span id="description">A ticket counter for arcade. </span>
    <br />
    <section id="content">
      <h1 class="shadow">Arcade</h1>
      <h1>Ticket Counter</h1>

      <div id="info">
        <div id="inputs">
          <div class="smol">
            <label for="goal">Ticket Goal: </label>
            <input type="number" id="goal" name="goal" value="150" />
          </div>
          <div class="vl"></div>
          <div>
            <label for="goal">End Date: </label>
            <input
              type="date"
              id="date"
              name="date"
              value="2024-08-31"
              max="2024-08-31"
            />
          </div>
        </div>
        <br />
        <h1 id="tickets">
          <button class="empty" id="remove-ticket-btn">➖</button>
          <span id="ticket-count">0 🎟️</span>
          <button class="empty" id="ticket-btn">➕</button>
        </h1>
      </div>

      <span class="label">Your Progress:</span>
      <div id="progress">
        <span id="current"></span>
        <span id="ideal"></span>
      </div>
      <div id="key">
        <div class="current">
          <div class="color"></div>
          <span
            >You are <span class="slackey" id="current-text">12%</span> on your way
            to <span id="goal-text">150</span> tickets.</span
          >
        </div>
        <div class="ideal">
          <div class="color"></div>
          <span
            >You should be <span class="slackey" id="ideal-text"
              >12% (18 🎟️)</span
            > complete.</span
          >
        </div>
        <div class="remaining">
          <div class="color"></div>
          <span
            >You have <span class="slackey" id="remaining-text"
              >88% (132 🎟️)</span
            > left to get to your goal!
          </span>
        </div>
      </div>
    </section>
    <footer>
      &copy; {new Date().getFullYear()} Eny. <a
        href="https://github.com/EnyCode/database"
        >This website is open source!</a
      >
    </footer>
  </body>
</html>
<script>
  const goal = document.getElementById("goal");
  let tickets = 0;
  const ticketCount = document.getElementById("ticket-count");
  const current = document.getElementById("current");
  const ideal = document.getElementById("ideal");
  const startDate = new Date("2024-06-18");
  const endDate = document.getElementById("date") as HTMLInputElement;
  const currentText = document.getElementById("current-text");
  const goalText = document.getElementById("goal-text");
  const idealText = document.getElementById("ideal-text");
  const remainingText = document.getElementById("remaining-text");
  const ticketBtn = document.getElementById("ticket-btn");
  const removeTicketBtn = document.getElementById("remove-ticket-btn");

  if (
    !goal ||
    !ticketCount ||
    !current ||
    !ideal ||
    !endDate ||
    !currentText ||
    !goalText ||
    !idealText ||
    !remainingText ||
    !ticketBtn ||
    !removeTicketBtn
  ) {
    throw new Error("Element not found.");
  }

  let goalValue = parseInt(goal.value);
  let currentPercent = Math.min((tickets / goalValue) * 100, 100);
  let totalDays = Math.ceil(
    (endDate.valueAsDate - startDate) / (1000 * 60 * 60 * 24)
  );
  let passedDays = Math.ceil((new Date() - startDate) / (1000 * 60 * 60 * 24));
  let idealPercent = Math.min((passedDays / totalDays) * 100, 100);

  goal.onkeydown = function (evt) {
    if (evt.key === " " || (evt.key.length === 1 && !/\d/.test(evt.key))) {
      evt.preventDefault();
    }
  };
  goal.onchange = function (evt) {
    goalValue = parseInt(evt.target.value);
    currentPercent = Math.min((tickets / goalValue) * 100, 100);

    update();
  };
  endDate.onchange = function (evt) {
    totalDays = Math.ceil(
      (endDate.valueAsDate - startDate) / (1000 * 60 * 60 * 24)
    );
    passedDays = Math.ceil((new Date() - startDate) / (1000 * 60 * 60 * 24));
    idealPercent = Math.min((passedDays / totalDays) * 100, 100);

    update();
  };

  function update() {
    // TODO: necessary?
    if (
      !current ||
      !ideal ||
      !currentText ||
      !goalText ||
      !idealText ||
      !remainingText
    ) {
      throw new Error("Element not found.");
    }
    current.style.width = `${currentPercent}%`;

    ideal.style.width = `${idealPercent}%`;

    if (currentPercent > idealPercent) {
      ideal.style.zIndex = "1";
      current.style.zIndex = "0";
    } else {
      ideal.style.zIndex = "0";
      current.style.zIndex = "1";
    }

    currentText.innerText = `${Math.round(currentPercent)}%`;
    goalText.innerText = `${goalValue}`;
    idealText.innerText = `${Math.round(idealPercent)}% (${Math.round(
      (idealPercent / 100) * goalValue
    )} 🎟️)`;
    remainingText.innerText = `${100 - Math.round(currentPercent)}% (${Math.round(
      (1 - currentPercent / 100) * goalValue
    )} 🎟️)`;
  }

  function addTicket() {
    tickets++;
    currentPercent = Math.min((tickets / goalValue) * 100, 100);
    ticketCount.innerHTML = `${tickets} 🎟️`;

    update();
  }

  function removeTicket() {
    tickets--;
    currentPercent = Math.min((tickets / goalValue) * 100, 100);
    ticketCount.innerHTML = `${tickets} 🎟️`;

    update();
  }

  ticketBtn.onclick = addTicket;
  removeTicketBtn.onclick = removeTicket;
  ticketCount.innerHTML = `${tickets} 🎟️`;

  update();

  //progress.style.background = `linear-gradient(to right, #09afb4 0%, #09afb4 50%, #f3e5c3 50%, #f3e5c3 100%)`;
</script>
<style is:global lang="scss">
  :root {
    --text: #252525;
    --text-dark-grey: #414141;
    --text-grey: #6b6b6b;
    --fun: #e9bc3f;
  }

  #content {
    background-color: #fbefd6;
    width: 100%;
    height: 100vh;
    padding-top: 5rem;
    font-family: "Gaegu";
    font-size: 1.4rem;

    h1,
    h2,
    h3 {
      color: #09afb4;
      font-family: "Slackey";
    }

    h1 {
      font-size: 50px;
      margin: 0;
      text-align: center;
    }

    h2 {
      font-size: 50px;
    }

    #info {
      width: 30%;
      margin: auto;
      margin-top: 3rem;

      #tickets {
        font-size: 66px;
        width: 130%;
        position: relative;
        left: -15%;

        button {
          font-size: 40px;
          //padding-bottom: 13px;
          position: relative;
          bottom: 13px;
        }
      }

      #inputs {
        margin: auto;
        display: flex;
        gap: 1.5rem;
        width: max-content;

        .vl {
          border-left: 2px solid #000;
          border-radius: 10px;
          height: 5rem;
          width: 0;
        }

        div {
          width: fit-content;

          &.smol {
            margin-left: calc(5rem - 60px);
          }

          label {
            width: 100%;
            display: block;
            text-align: center;
          }
          input {
            background-color: #ede5d3;
            border: none;
            outline: none;
            border-radius: 5px;
            padding: 8px;
            max-width: 60px;
            font-size: inherit;
            font-family: inherit;
            display: block;
            margin: auto;
            text-align: center;

            &#date {
              max-width: 10rem;
            }
          }
        }
      }
      h2 {
        text-align: center;
      }
    }

    #key {
      margin-left: 27.5%;
      margin-top: 0.5rem;

      .color {
        width: 1rem;
        height: 1rem;
        display: inline-block;
        margin-top: 0.2rem;
        border-radius: 3px;
      }

      .current > .color {
        background-color: #09afb4;
      }

      .ideal > .color {
        background-color: #ff5c00;
      }

      .remaining > .color {
        background-color: #f3e5c3;
      }
    }

    .label {
      display: block;
      margin-left: 27.5%;
      margin-top: 2rem;
      margin-bottom: 0.5rem;
    }

    #progress {
      width: 45%;
      margin: auto;
      background-color: #f3e5c3;
      border-radius: 10px;
      height: 2rem;
      overflow-x: hidden;

      #current {
        width: 50%;
        background-color: #09afb4;
        border-radius: 10px;
        height: 2rem;
        position: relative;
        z-index: 0;
        transition: ease-in-out width 0.4s;
        display: block;
      }

      #ideal {
        width: 30%;
        background-color: #ff5c00;
        border-radius: 10px;
        height: 2rem;
        position: relative;
        top: -2rem;
        z-index: 1;
        transition: ease-in-out width 0.4s;
        display: block;
      }
    }

    .slackey {
      font-family: "Slackey";
      font-size: 1.025rem;
    }

    .shadow {
      text-shadow:
        -4px -4px #faefd6,
        -3px -3px #faefd6,
        -2px -2px #faefd6,
        -2px -2px #faefd6,
        -1px -1px #faefd6,
        -1px -1px #faefd6,
        -1px -1px #faefd6,
        1px 1px #faefd6,
        1px 1px #faefd6,
        1px 1px #faefd6,
        2px 2px #faefd6,
        4px 4px #faefd6,
        3px 3px #faefd6,
        -8px -8px #09afb4,
        -6px -6px #09afb4,
        -5px -5px #09afb4,
        -4px -4px #09afb4,
        -3px -3px #09afb4,
        -2px -2px #09afb4,
        2px 2px #09afb4,
        3px 3px #09afb4,
        5px 5px #09afb4,
        4px 4px #09afb4,
        7px 7px #09afb4,
        6px 6px #09afb4,
        8px 8px #09afb4,
        -8px -8px #09afb4,
        9px 9px #09afb4,
        -9px -9px #09afb4,
        10px 10px #09afb4,
        -10px -10px #09afb4;
      color: #ff5c00;
      font-size: 85px;
    }
  }

  button.empty {
    background-color: transparent;
    border: none;
    cursor: pointer;
    transition: transform 0.2s;
    font-size: inherit;

    &:hover {
      transform: scale(1.05);
    }

    &:active {
      animation: pulse 0.3s linear 1;
    }
  }

  @keyframes pulse {
    25% {
      transform: scale(0.8);
    }
    75% {
      transform: scale(1.3);
    }
  }

  // #region Fonts
  @font-face {
    font-family: "Slackey";
    src: url("/fonts/arcade/Slackey-Regular.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Gaegu";
    src: url("/fonts/arcade/Gaegu-Regular.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Minecraft";
    src: url("/fonts/Minecraft.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  // #endregion

  // #region Default stuff
  #title {
    text-align: center;
    font-size: 4rem;
    margin-bottom: 0.5rem;
    margin-top: 6rem;
    color: var(--text-dark-grey);
  }

  #count {
    text-align: center;
    font-size: 7rem;
    font-family: "Minecraft";
    margin-top: 0.5rem;
    margin-left: 0.166ch;
    margin-bottom: 0.5rem;
  }

  #description {
    font-size: 1.25rem;
    text-align: center;
    font-weight: 600;
    display: block;
    color: var(--text-grey);
  }

  ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    width: 25%;
    margin: 3rem auto;

    li {
      border-top: 1px solid var(--text-grey);
      border-bottom: 1px solid var(--text-grey);
      border-width: 2px;
      padding: 1rem;
      margin: 1.5rem 0;

      .count {
        font-family: "Minecraft";
      }

      .description {
        font-size: 1rem;
        color: var(--text-grey);
      }
    }
  }

  footer {
    text-align: center;
    margin-top: 3rem;
    color: var(--text-dark-grey);
    font-size: 0.9rem;
  }

  a {
    color: inherit;
    text-decoration-thickness: 2px;
    text-decoration-color: var(--underline-color);
    transition: text-decoration-color 0.3s;

    &:hover {
      text-decoration-color: var(--underline-hover);
    }
  }

  hr {
    width: 50vw;
    border-width: 2px;
    border-radius: 1rem;
    border-color: var(--text-grey);
  }

  html {
    font-family: "iA Writer Mono", monospace;
    background: #efefef;
    background-size: 224px;
    color: var(--text);
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
  // #endregion
</style>
